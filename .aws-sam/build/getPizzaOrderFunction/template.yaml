AWSTemplateFormatVersion: 2010-09-09
Description: >-
  pizzaOrderService
Transform:
- AWS::Serverless-2016-10-31
Resources:
  PizzaOrdersQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName : OrdersQueue
  pizzaOrderHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: A Lambda function that logs the payload of messages sent to an associated SQS queue.
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      Handler: src/handlers/pizzaOrderHandler.pizzaOrderHandler
      Events:
        SQSQueueEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt PizzaOrdersQueue.Arn
      MemorySize: 128
      Timeout: 25
      Policies:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - sqs:DeleteMessage
          - sqs:ReceiveMessage
          Resource:
            - Fn::GetAtt: [PizzaOrdersQueue, Arn]
        - Effect: Allow
          Action:
          - dynamodb:PutItem
          Resource:
            - Fn::GetAtt: [OrdersTable, Arn]
      Environment:
        Variables:
          ORDERS_QUEUE: !Ref PizzaOrdersQueue
          ORDERS_TABLE: !Ref OrdersTable
  getPizzaOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: A Lambda function that queries pizza orders from DynamoDB
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      Handler: src/handlers/getPizzaOrder.getPizzaOrderHandler
      MemorySize: 128
      Timeout: 25
      Policies:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:GetItem
          Resource:
            - Fn::GetAtt: [OrdersTable, Arn]
      Environment:
        Variables:
          ORDERS_TABLE: !Ref OrdersTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /orders/{orderId}
            Method: GET
  pizzaOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/createPizzaOrder.createPizzaOrderHandler
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Policies:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - sqs:SendMessage
          - sqs:DeleteMessage
          - sqs:ReceiveMessage
          Resource:
            - Fn::GetAtt: [PizzaOrdersQueue, Arn]
      Environment:
        Variables:
          ORDERS_QUEUE: !Ref PizzaOrdersQueue      
      Events:
        Api:
          Type: Api
          Properties:
            Path: /orders/
            Method: POST
  OrdersTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions:
          - AttributeName: orderId
            AttributeType: S
      KeySchema: 
          - AttributeName: orderId
            KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"